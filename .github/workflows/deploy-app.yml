name: Deploy Streamlit App to GCP

on:
    workflow_run:
      workflows: ["Deploy API to GCP"]
      types:
        - completed
    workflow_dispatch:

jobs:
  build-push:
    name: Build and Push Streamlit Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Build Docker image for Streamlit App
        run: |
          docker build -f Dockerfile.streamlit -t europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/wine-quality-prediction-app/wine-quality-prediction-app:latest .
      
      - name: Push Docker image for Streamlit App
        run: |
          docker push europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/wine-quality-prediction-app/wine-quality-prediction-app:latest

  terraform-deploy:
    name: Deploy Streamlit App to Cloud Run via Terraform
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Terraform Init
        run: terraform -chdir=streamlit init

      - name: Terraform Plan
        run: terraform -chdir=streamlit plan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=europe-west1"

      - name: Terraform Apply
        run: terraform -chdir=streamlit apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=europe-west1"